swagger: "2.0"
info:
  description: "수화 교육 프로젝트 Swagger입니다."
  version: "1.0.0"
  title: "Sign Language Swagger"
host: "localhost:5000"
basePath: "/"
tags:
  - name: Register User
    description: "Registering User"
  - name: User
    description: "User API"
  - name: Sign Language
    description: "American Sing Language API"
  - name: Score Board
    description: "Top ten scores"
  - name: Card
    description: "Card images only korean, no english"

schemes:
  - "http"

paths:
  /register:
    post:
      tags:
        - Register User
      summary: "Register User"
      description: ""
      operationId: "Register User"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Register User"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "405":
          description: "Invalid input"
  /user:
    post:
      tags:
        - User
      summary: "Login User"
      description: ""
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Login User"
          required: true
          schema:
            $ref: "#/definitions/User"

      responses:
        "405":
          description: "Invalid input"
    put:
      tags:
        - User
      summary: "modify User information"
      description: ""
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: authorization
          in: header
          type: string
          required: true
        - in: "body"
          name: "body"
          description: "Register User"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "405":
          description: "Invalid input"
    delete:
      tags:
        - User
      summary: "Delete User"
      description: ""
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: authorization
          in: header
          type: string
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "405":
          description: "Invalid input"

  /user/password:
    put:
      tags:
        - User
      summary: "user password modify"
      description: ""
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: authorization
          in: header
          type: string
          required: true
        - in: "body"
          name: "body"
          description: "Register User"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "405":
          description: "Invalid input"

  /user/jwt/{token}:
    get:
      tags:
        - User
      description: "reissue jwt token"
      parameters:
        - in: path
          name: token
          schema:
            type: string
          required: true
          description: get token
      responses:
        "200":
          description: Return JSON
  /user/studylist:
    get:
      tags:
        - User
      description: "user studylist return"
      parameters:
        - name: authorization
          in: header
          type: string
          required: true
      responses:
        "200":
          description: Return JSON

  /user/study:
    post:
      tags:
        - User
      description: "user Study record"
      parameters:
        - in: query
          name: word
          schema:
            type: string
          description: get word
        - in: query
          name: point
          schema:
            type: number
          description: get point
        - name: authorization
          in: header
          type: string
          required: true
      responses:
        "200":
          description: Return JSON

  /hands:
    post:
      tags:
        - Sign Language
      description: "putting in Sign language image"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Register hand data"
          required: true
          schema:
            $ref: "#/definitions/Hand"
      responses:
        "201":
          description: "POST Successful."
        "405":
          description: "Invalid input"
    get:
      tags:
        - Sign Language
      description: "getting all english dataset"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: Return JSON

  /hands/{english}:
    get:
      tags:
        - Sign Language
      description: "getting all english dataset"
      consumes:
        - "applicaion/json"
      produces:
        - "applicaion/json"
      parameters:
        - in: path
          name: english
          schema:
            type: string
          required: true
          description: english string
      responses:
        "200":
          description: Return JSON

  /scores/login:
    post:
      tags:
        - Score Board
      description: "login user putting score"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: authorization
          in: header
          type: string
          required: true
        - in: "body"
          name: "body"
          description: "Register score data"
          required: true
          schema:
            $ref: "#/definitions/Score"
      responses:
        "201":
          description: "POST Successful."
        "405":
          description: "Invalid input"

  /scores/nologin:
    post:
      tags:
        - Score Board
      description: "Nonlogin user putting score"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Register score data"
          required: true
          schema:
            $ref: "#/definitions/NonloginUserScore"
      responses:
        "201":
          description: "POST Successful."
        "405":
          description: "Invalid input"

  /scores/topten:
    get:
      tags:
        - Score Board
      description: "Get Top ten scores"
      responses:
        "200":
          description: Return JSON

  /cards:
    get:
      tags:
        - Card
      description: "Card images in korean"
      responses:
        "200":
          description: Return JSON

securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"

definitions:
  User:
    type: "object"
    properties:
      email:
        type: "string"
      password:
        type: "string"
      username:
        type: "string"
    xml:
      name: "Order"
  Hand:
    type: object
    properties:
      english:
        type: string
        example: "test"
      handVideo:
        type: string
        example: "test hand video"
      mouthVideo:
        type: string
        example: "test mouth video"
  Score:
    type: object
    properties:
      score:
        type: number
        example: 50
      time:
        type: number
        example: 300
  NonloginUserScore:
    type: object
    properties:
      username:
        type: string
        example: "noname"
      score:
        type: number
        example: 80
      time:
        type: number
        example: 300

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
